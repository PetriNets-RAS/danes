/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.AbsPlace;
import Core.Element;
import Core.Graph;
import Core.Transition;
import GUI.View.DiagramPanel;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JColorChooser;


/**
 *
 * @author Miso
 */
public class PropertiesMenu extends javax.swing.JPanel {
    private String elementName;
    private String elementWidth;
    private String elementHeight;
    private String elementFontSize;
    private String elementMarking;
    private boolean elementStart;
    private boolean elementEnd;
    private Color elementColor;
    private Graph graph;
    private DiagramPanel window;
    private Element element;
    
    /**
     * Creates new form PropertiesParentMenu
     */
    public PropertiesMenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label4 = new java.awt.Label();
        jButton4 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        label6 = new java.awt.Label();
        jButton6 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        heightText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        widthText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fontSizeText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        colorLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fontColorLabel = new javax.swing.JLabel();
        specific = new javax.swing.JPanel();
        endCheckBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        startCheckBox = new javax.swing.JCheckBox();
        markingText = new javax.swing.JTextField();

        label4.setName(""); // NOI18N
        label4.setText("Width");

        jButton4.setText("Ok");

        label6.setName(""); // NOI18N
        label6.setText("Font size");

        jButton6.setText("Ok");

        setRequestFocusEnabled(false);

        jLabel1.setText("Name");
        jLabel1.setToolTipText("Name of element");

        nameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameTextKeyReleased(evt);
            }
        });

        jLabel2.setText("Height");
        jLabel2.setToolTipText("GUI height of element");

        heightText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                heightTextKeyReleased(evt);
            }
        });

        jLabel3.setText("Width");
        jLabel3.setToolTipText("GUI width of element");

        widthText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                widthTextKeyReleased(evt);
            }
        });

        jLabel4.setText("Font Size");
        jLabel4.setToolTipText("Font Size");

        fontSizeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fontSizeTextKeyReleased(evt);
            }
        });

        jLabel5.setText("Font color");
        jLabel5.setToolTipText("color of element");

        colorLabel.setBackground(new java.awt.Color(0, 0, 102));
        colorLabel.setForeground(new java.awt.Color(255, 255, 255));
        colorLabel.setOpaque(true);
        colorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorLabelMouseClicked(evt);
            }
        });

        jLabel6.setText("Color");
        jLabel6.setToolTipText("color of element");

        fontColorLabel.setBackground(new java.awt.Color(0, 0, 102));
        fontColorLabel.setForeground(new java.awt.Color(255, 255, 255));
        fontColorLabel.setOpaque(true);
        fontColorLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fontColorLabelMouseClicked(evt);
            }
        });

        endCheckBox.setText("End");
        endCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endCheckBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Marking");

        startCheckBox.setText("Start");
        startCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startCheckBoxActionPerformed(evt);
            }
        });

        markingText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                markingTextKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout specificLayout = new javax.swing.GroupLayout(specific);
        specific.setLayout(specificLayout);
        specificLayout.setHorizontalGroup(
            specificLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, specificLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(specificLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(markingText, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        specificLayout.setVerticalGroup(
            specificLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(specificLayout.createSequentialGroup()
                .addGroup(specificLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(markingText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(endCheckBox)
                .addGap(0, 26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(heightText)
                            .addComponent(nameText, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(widthText)
                            .addComponent(fontSizeText)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fontColorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(colorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(specific, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameText)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(heightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(widthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fontSizeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(colorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fontColorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(specific, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void colorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorLabelMouseClicked
        JColorChooser colorChooser = new JColorChooser();
        elementColor = JColorChooser.showDialog(this, "Vyberte farbu", this.element.getColor());
        //colorLabel.setBackground(elementColor);
        element.setColor(elementColor);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_colorLabelMouseClicked

    private void fontColorLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fontColorLabelMouseClicked
        JColorChooser colorChooser = new JColorChooser();
        elementColor = JColorChooser.showDialog(this, "Vyberte farbu", this.element.getColor2());
        //colorLabel.setBackground(elementColor);
        element.setColor2(elementColor);
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_fontColorLabelMouseClicked

    private void nameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameTextKeyReleased
        if(!nameText.getText().equals(""))   
            element.setName(nameText.getText());
    }//GEN-LAST:event_nameTextKeyReleased

    private void heightTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_heightTextKeyReleased
        if(!heightText.getText().equals(""))
        {
            if(element instanceof AbsPlace)
            {
                AbsPlace abs = (AbsPlace)element;
                abs.setHeight(Integer.parseInt(heightText.getText()));
            }
            if(element instanceof Transition)
            {
                Transition abs = (Transition)element;
                abs.setHeight(Integer.parseInt(heightText.getText()));
            }
        }
    }//GEN-LAST:event_heightTextKeyReleased

    private void widthTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_widthTextKeyReleased
        if(!widthText.getText().equals(""))
        {
            if(element instanceof AbsPlace)
            {
                AbsPlace abs = (AbsPlace)element;
                abs.setWidth(Integer.parseInt(widthText.getText()));
            }
            if(element instanceof Transition)
            {
                Transition abs = (Transition)element;
                abs.setWidth(Integer.parseInt(widthText.getText()));
            }
        }
    }//GEN-LAST:event_widthTextKeyReleased

    private void fontSizeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fontSizeTextKeyReleased
        if(!fontSizeText.getText().equals(""))
            element.setFontSize(Integer.parseInt(fontSizeText.getText()));
    }//GEN-LAST:event_fontSizeTextKeyReleased

    private void startCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startCheckBoxActionPerformed
        if(element instanceof AbsPlace)
        {
            AbsPlace abs = (AbsPlace)element;
            if(startCheckBox.isSelected())
            {
                abs.setStart(true);
            }
            else
            {
                abs.setStart(false);
            }    
        }
    }//GEN-LAST:event_startCheckBoxActionPerformed

    private void endCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endCheckBoxActionPerformed
        if(element instanceof AbsPlace)
        {
            AbsPlace abs = (AbsPlace)element;
            if(endCheckBox.isSelected())
            {
                abs.setEnd(true);
            }
            else
            {
                abs.setEnd(false);
            }
                
        }
    }//GEN-LAST:event_endCheckBoxActionPerformed

    private void markingTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_markingTextKeyReleased
        if (!markingText.getText().equals("")) {
            if (element instanceof AbsPlace) {
                AbsPlace abs = (AbsPlace) element;
                abs.setMarking(Integer.parseInt(markingText.getText()));
            }
        }        
    }//GEN-LAST:event_markingTextKeyReleased
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel colorLabel;
    private javax.swing.JCheckBox endCheckBox;
    private javax.swing.JLabel fontColorLabel;
    private javax.swing.JTextField fontSizeText;
    private javax.swing.JTextField heightText;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private java.awt.Label label4;
    private java.awt.Label label6;
    private javax.swing.JTextField markingText;
    private javax.swing.JTextField nameText;
    private javax.swing.JPanel specific;
    private javax.swing.JCheckBox startCheckBox;
    private javax.swing.JTextField widthText;
    // End of variables declaration//GEN-END:variables


    /**
     * @return the elementWidth
     */
    public String getElementWidth() {
        return elementWidth;
    }

    /**
     * @param elementWidth the elementWidth to set
     */
    public void setElementWidth(String elementWidth) {
        
        this.widthText.setText(elementWidth);
        //this.elementWidth = elementWidth;
    }

    /**
     * @return the elementHeight
     */
    public String getElementHeight() {
        return elementHeight;
    }

    /**
     * @param elementHeight the elementHeight to set
     */
    public void setElementHeight(String elementHeight) {
        //this.elementHeight = elementHeight;
        this.heightText.setText(elementHeight);
    }

    /**
     * @return the elementFontSize
     */
    public String getElementFontSize() {
        return elementFontSize;
    }

    /**
     * @param elementFontSize the elementFontSize to set
     */
    public void setElementFontSize(String elementFontSize) {
        //this.elementFontSize = elementFontSize;
        this.fontSizeText.setText(elementFontSize);
    }

    /**
     * @return the elementColor
     */
    public Color getElementColor() {
        return elementColor;
    }

    /**
     * @param elementColor the elementColor to set
     */
    public void setElementColor(Color elementColor) {
        this.elementColor = elementColor;
        //this.colorText.setText(elementColor);
    }

    /**
     * @return the elementName
     */
    public String getElementName() {
        return elementName;
    }

    /**
     * @param elementName the elementName to set
     */
    public void setElementName(String elementName) {
        //this.elementName = elementName;
        this.nameText.setText(elementName);
    }

    
    /**
     * @return the elementMarking
     */
    public String getElementMarking() {
        return elementMarking;
    }

    /**
     * @param elementMarking the elementMarking to set
     */
    public void setElementMarking(String elementMarking) {
       this.markingText.setText(elementMarking);
    }

    /**
     * @return the elementStart
     */
    public boolean isElementStart() {
        return elementStart;
    }

    /**
     * @param elementStart the elementStart to set
     */
    public void setElementStart(boolean elementStart) {
       if (elementStart) {
            this.startCheckBox.setSelected(true);
        }
        else
            this.startCheckBox.setSelected(false);
    }

    /**
     * @return the elementEnd
     */
    public boolean isElementEnd() {
        return elementEnd;
    }

    /**
     * @param elementEnd the elementEnd to set
     */
    public void setElementEnd(boolean elementEnd) {
        if (elementEnd) {
            this.endCheckBox.setSelected(true);
        }
        else
            this.endCheckBox.setSelected(false);
    }
    
    public void loadProperties(Element currentElement, Graph graph, DiagramPanel window) {
        this.element = currentElement;
        //this.graph = graph;
        this.window = window;
        setElementName(currentElement.getName());
        setElementColor(currentElement.getColor());      
        colorLabel.setBackground(currentElement.getColor());
        fontColorLabel.setBackground(currentElement.getColor2());
            setElementFontSize(Integer.toString(currentElement.getFontSize()));
            //notes.setText(currentElement.getNote());
            if(currentElement instanceof AbsPlace)
            {
                AbsPlace current= (AbsPlace) currentElement;
                setElementWidth(Integer.toString(current.getWidth()));
                setElementHeight(Integer.toString(current.getHeight()));
                setElementMarking(Integer.toString(current.getMarking()));
                setElementEnd(current.isEnd());
                setElementStart(current.isStart());
                specific.setVisible(true);
            }
            if(currentElement instanceof Transition)
            {
                Transition current= (Transition) currentElement;
                setElementWidth(Integer.toString(current.getWidth()));
                setElementHeight(Integer.toString(current.getHeight()));
                specific.setVisible(false);
            }
            this.revalidate();
            this.validate();
    }
}
