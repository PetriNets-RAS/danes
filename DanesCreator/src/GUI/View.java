/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.Element;
import Core.PetriNet;
import Core.Place;
import Core.Transition;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Rectangle2D;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;

/**
 *
 * @author marek
 */
public class View extends javax.swing.JFrame {

    private PetriNet        petriNet;
    private DiagramPanel    diagramPanel;
    
    private Controller  controller;
    
    public View(PetriNet pa_petriNet,Controller pa_controller) {        
        super();  
        this.petriNet       =pa_petriNet;  
        this.controller     =pa_controller;
        this.diagramPanel   =null;
        initComponents();
        
        // Custom init 
        setTitle("Danes Creator");
        setSize(800, 600); 
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sideMenu = new javax.swing.JPanel();
        ellipseButton = new javax.swing.JToggleButton();
        rectangleButton = new javax.swing.JToggleButton();
        diagramScrollPane = new javax.swing.JScrollPane();
        topMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newProjectItem = new javax.swing.JMenuItem();
        saveItem = new javax.swing.JMenuItem();
        saveAsItem = new javax.swing.JMenuItem();
        exitItem = new javax.swing.JMenuItem();
        editMenuItem = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sideMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ellipseButton.setText("m");
        ellipseButton.setToolTipText("Pridat miesto");

        rectangleButton.setText("p");
        rectangleButton.setToolTipText("pridate priechod");

        javax.swing.GroupLayout sideMenuLayout = new javax.swing.GroupLayout(sideMenu);
        sideMenu.setLayout(sideMenuLayout);
        sideMenuLayout.setHorizontalGroup(
            sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sideMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ellipseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rectangleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        sideMenuLayout.setVerticalGroup(
            sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sideMenuLayout.createSequentialGroup()
                .addGroup(sideMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ellipseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rectangleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 351, Short.MAX_VALUE))
        );

        diagramScrollPane.setBorder(null);

        fileMenu.setText("File");

        newProjectItem.setText("Nova siet");
        newProjectItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectItemActionPerformed(evt);
            }
        });
        fileMenu.add(newProjectItem);

        saveItem.setText("Ulo탑i큐");
        fileMenu.add(saveItem);

        saveAsItem.setText("Ulo탑i큐 ako ...");
        saveAsItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsItem);

        exitItem.setText("Koniec");
        exitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitItem);

        topMenu.add(fileMenu);

        editMenuItem.setText("Edit");
        topMenu.add(editMenuItem);

        setJMenuBar(topMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(diagramScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addGap(49, 49, 49)
                .addComponent(sideMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(sideMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(diagramScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_exitItemActionPerformed

    private void saveAsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsItemActionPerformed
      JFileChooser fileChooser = new JFileChooser();
        int showOpenDialog = fileChooser.showSaveDialog(this);

        if (showOpenDialog != JFileChooser.APPROVE_OPTION) return; 
    }//GEN-LAST:event_saveAsItemActionPerformed

    private void newProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectItemActionPerformed
        // Create and display new panel
        this.diagramPanel   =   new DiagramPanel(petriNet);
        diagramScrollPane.setViewportView(this.diagramPanel);
    }//GEN-LAST:event_newProjectItemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane diagramScrollPane;
    private javax.swing.JMenu editMenuItem;
    private javax.swing.JToggleButton ellipseButton;
    private javax.swing.JMenuItem exitItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem newProjectItem;
    private javax.swing.JToggleButton rectangleButton;
    private javax.swing.JMenuItem saveAsItem;
    private javax.swing.JMenuItem saveItem;
    private javax.swing.JPanel sideMenu;
    private javax.swing.JMenuBar topMenu;
    // End of variables declaration//GEN-END:variables
class DiagramPanel extends javax.swing.JPanel {

    private int                     elementWidth;
    private DiagramMouseAdapter     mouseAdapter;    
    
    private PetriNet                petriNet;
    
    private Graphics2D              g2d;
    /**
     * Creates new form GraphPanel
     */
    
    public DiagramPanel(PetriNet pa_petriNet) {                      
        this.petriNet=pa_petriNet;
        // Max sirka,vyska = 1000x1000
        this.elementWidth    =   50; // 50 Px jeden prvok
        this.mouseAdapter   =   new DiagramMouseAdapter(); 
                
        // Listeneri
        addMouseListener(mouseAdapter);
   
        setPreferredSize(new Dimension(1000, 1000));
        setBackground(Color.WHITE);
    }
    
    @Override
    public void paint(Graphics g) 
    {
        super.paint(g);
        this.g2d = (Graphics2D) g;
        
        drawDiagramPetriNet();

    }
   
    public void drawPlace(int stlpec,int riadok){
        // Place / Ring
        g2d.setColor(new Color(0, 0, 0));
        g2d.fill(new Ellipse2D.Double(stlpec*elementWidth,riadok*elementWidth,elementWidth,elementWidth));        
    }

    public void drawTransition(int stlpec,int riadok){
        // Transition / Rectangle
        g2d.setColor(new Color(0, 0, 0));
        g2d.fill(new Rectangle2D.Float(stlpec*elementWidth+12,riadok*elementWidth,25,elementWidth));                
    }
    
    
   
    public void drawDiagramPetriNet()                  
    {
        // Draw all places
        for(Element e:petriNet.getListOfPlaces())
        {            
            drawPlace(e.getDiagramElement().getX(), e.getDiagramElement().getY());
        }
        
        // Draw all transitions
        for(Element e:petriNet.getListOfTransitions())
        {            
            drawTransition(e.getDiagramElement().getX(), e.getDiagramElement().getY());
        }        
        
    }
    

    public void mouseLeftClick(int x, int y) {  
        
        // Creating new place
        if (ellipseButton.isSelected())
        {        
            int x_location=x/elementWidth;
            int y_location=y/elementWidth;
            controller.addPlace("Place",x_location,y_location);
        }    
            
        // Creating new transition
        if (rectangleButton.isSelected())
        {        
            int x_location=x/elementWidth;
            int y_location=y/elementWidth;   
            controller.addTransition("Transition", x_location, y_location);                   
        }
        
        repaint();    
    }

}


public class DiagramMouseAdapter extends MouseAdapter 
{
    private int x;
    private int y;

    public DiagramMouseAdapter()    {}
    
    @Override
    public void mousePressed(MouseEvent e) 
    {
      // Save current
      x = e.getX();
      y = e.getY();
      
      // Check for click button
      if (SwingUtilities.isLeftMouseButton  (e) ) {
        diagramPanel.mouseLeftClick(x,y);
        }
    /*  if (SwingUtilities.isRightMouseButton   (e) ) {
        diagramPanel.mouseRightClick(x,y);
        
    }
      /*if (SwingUtilities.isMiddleMouseButton  (e) )
          System.out.println("stredny "+x+" "+y);*/
    }
  }
    

}
